from fastapi import FastAPI
from pydantic import BaseModel
import openai
import os
from fastapi.middleware.cors import CORSMiddleware

openai.api_key = os.getenv("OPENAI_API_KEY")

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

class TextRequest(BaseModel):
    text: str

@app.post("/analyze")
async def analyze_text(data: TextRequest):
    prompt = f"""
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:
{data.text}
1. –û—Ü–µ–Ω–∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å –æ—Ç 0 –¥–æ 100.
2. –û–±—ä—è—Å–Ω–∏, –∫–∞–∫–∏–µ —á–∞—Å—Ç–∏ –∫–∞–∂—É—Ç—Å—è –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –ò–ò (–∏ –ø–æ—á–µ–º—É).
3. –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –≤ —Ç–µ–∫—Å—Ç–µ.
4. –ü–µ—Ä–µ–ø–∏—à–∏ —Ç–µ–∫—Å—Ç, —Å–¥–µ–ª–∞–≤ –µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ–ª–æ–≤–µ—á–Ω—ã–º, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º.
–û—Ç–≤–µ—Ç –≤–µ—Ä–Ω–∏ –≤ JSON:
{{
  "score": int,
  "reasons": ["..."],
  "highlights": ["..."],
  "rewrite": "..."
}}
"""
    client = openai.OpenAI()  # üëà –Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    chat_response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7
    )
    content = chat_response.choices[0].message.content
    return eval(content)  # –º–æ–∂–Ω–æ –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ json.loads()
